@model FooterModel
@using Nop.Core
@using Nop.Core.Domain.Tax
@using Nop.Core.Domain.Topics;
@using Nop.Services.Configuration
@using Nop.Services.Media
@using Nop.Web.Framework.Mvc.Routing;
@inject IWorkContext workContext
@inject ISettingService settingService
@inject IPictureService pictureService
@inject IStoreContext storeContext

@{
    var footerBackgroundPictureId = await settingService.GetSettingByKeyAsync<int>("berrysettings.footerbackgroundpictureid", storeContext.GetCurrentStoreAsync().Id, loadSharedValueIfNotFound: true);
    var footerBackgroundPictureUrl = await pictureService.GetPictureUrlAsync(footerBackgroundPictureId);

    var newsletterBackgroundPictureId = await settingService.GetSettingByKeyAsync<int>("berrysettings.newsletterbackgroundpictureid", storeId: storeContext.GetCurrentStoreAsync().Id, loadSharedValueIfNotFound: true);
    var newsletterBackgroundPictureUrl = await pictureService.GetPictureUrlAsync(newsletterBackgroundPictureId);

    var footerEmail = await settingService.GetSettingByKeyAsync<string>("berrysettings.FooterEmail", storeId: storeContext.GetCurrentStoreAsync().Id, loadSharedValueIfNotFound: true);

    var showSupportedCardsFooter = await settingService.GetSettingByKeyAsync<bool>("berrysettings.ShowSupportedCardsPictureAtPageFooter", storeId: (await storeContext.GetCurrentStoreAsync()).Id, loadSharedValueIfNotFound: true);
    var supportedcardId = await settingService.GetSettingByKeyAsync<int>("berrysettings.SupportedCardsPictureId", storeId: (await storeContext.GetCurrentStoreAsync()).Id, loadSharedValueIfNotFound: true);
    var supportedcardurl = await pictureService.GetPictureUrlAsync(supportedcardId);
    var hideDesignedByNopStation = await settingService.GetSettingByKeyAsync<bool>(
        "berrysettings.HideDesignedByNopStationAtFooter", storeId: (await storeContext.GetCurrentStoreAsync()).Id, loadSharedValueIfNotFound: true);
}

<div class="footer" style="background-image: url('@footerBackgroundPictureUrl');">
    <div class="newsletter-box" style="background-image: url('@newsletterBackgroundPictureUrl');">
        <div class="row m-0">
            <div class="col-sm-10 col-md-7 col-lg-5 m-auto p-3 p-md-5">
                @await Component.InvokeAsync(typeof(NewsletterBoxViewComponent))
            </div>
        </div>
    </div>
    <div class="footer-upper custom-container-fluid">

        <div class="footer-manufacturer">
            @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = "berry_before_footer_nav" })
        </div>

        <div class="row">
            <div class="col-lg-3">
                <div class="footer-block information mb-3">
                    <div class="title" data-toggle="collapse" data-parent="#accordion" href="#collapseOne">
                        <strong>@T("Footer.Information")</strong>
                    </div>
                    <ul class="list panel-collapse collapse" id="collapseOne">
                        @if (Model.SitemapEnabled && Model.DisplaySitemapFooterItem)
                        {
                            <li><a href="@Url.RouteUrl("Sitemap")">@T("Sitemap")</a></li>
                        }
                        @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn1).ToList())
                        {
                            <li><a href="@(Url.RouteUrl<Topic>(new { SeName = topic.SeName }))">@topic.Name</a></li>
                        }
                        @if (Model.DisplayContactUsFooterItem)
                        {
                            <li><a href="@Url.RouteUrl("ContactUs")">@T("ContactUs")</a></li>
                        }
                    </ul>
                </div>
            </div>
            <div class="col-lg-3">
                <div class="footer-block customer-service mb-3">
                    <div class="title" data-toggle="collapse" data-parent="#accordion" href="#collapseTwo">
                        <strong>@T("Footer.CustomerService")</strong>
                    </div>
                    <ul class="list panel-collapse collapse" id="collapseTwo">
                        @if (Model.DisplayProductSearchFooterItem)
                        {
                            <li><a href="@Url.RouteUrl("ProductSearch")">@T("Search")</a> </li>
                        }
                        @if (Model.NewsEnabled && Model.DisplayNewsFooterItem)
                        {
                            <li><a href="@Url.RouteUrl("NewsArchive")">@T("News")</a></li>
                        }
                        @if (Model.BlogEnabled && Model.DisplayBlogFooterItem)
                        {
                            <li><a href="@Url.RouteUrl("Blog")">@T("Blog")</a></li>
                        }
                        @if (Model.ForumEnabled && Model.DisplayForumsFooterItem)
                        {
                            <li><a href="@Url.RouteUrl("Boards")">@T("Forum.Forums")</a></li>
                        }
                        @if (Model.RecentlyViewedProductsEnabled && Model.DisplayRecentlyViewedProductsFooterItem)
                        {
                            <li><a href="@Url.RouteUrl("RecentlyViewedProducts")">@T("Products.RecentlyViewedProducts")</a></li>
                        }
                        @if (Model.CompareProductsEnabled && Model.DisplayCompareProductsFooterItem)
                        {
                            <li><a href="@Url.RouteUrl("CompareProducts")">@T("Products.Compare.List")</a></li>
                        }
                        @if (Model.NewProductsEnabled && Model.DisplayNewProductsFooterItem)
                        {
                            <li><a href="@Url.RouteUrl("NewProducts")">@T("Products.NewProducts")</a></li>
                        }
                        @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn2).ToList())
                        {
                            <li><a href="@Url.RouteUrl("Topic", new {SeName = topic.SeName})">@topic.Name</a></li>
                        }
                        @if (Model.AllowCustomersToCheckGiftCardBalance)
                        {
                            <li><a href="@Url.RouteUrl("CheckGiftCardBalance")">@T("CheckGiftCardBalance")</a></li>
                        }
                    </ul>
                </div>
            </div>
            <div class="col-lg-3">
                <div class="footer-block my-account mb-3">
                    <div class="title" data-toggle="collapse" data-parent="#accordion" href="#collapseThree">
                        <strong>@T("Footer.MyAccount")</strong>
                    </div>
                    <ul class="list panel-collapse collapse" id="collapseThree">
                        @if (Model.DisplayCustomerInfoFooterItem)
                        {
                            <li><a href="@Url.RouteUrl("CustomerInfo")">@T("Account.MyAccount")</a></li>
                        }
                        @if (Model.DisplayCustomerOrdersFooterItem)
                        {
                            <li><a href="@Url.RouteUrl("CustomerOrders")">@T("Account.CustomerOrders")</a></li>
                        }
                        @if (Model.DisplayCustomerAddressesFooterItem)
                        {
                            <li><a href="@Url.RouteUrl("CustomerAddresses")">@T("Account.CustomerAddresses")</a></li>
                        }
                        @if (Model.ShoppingCartEnabled && Model.DisplayShoppingCartFooterItem)
                        {
                            <li><a href="@Url.RouteUrl("ShoppingCart")">@T("ShoppingCart")</a></li>
                        }
                        @if (Model.WishlistEnabled && Model.DisplayWishlistFooterItem)
                        {
                            <li><a href="@Url.RouteUrl("Wishlist")">@T("Wishlist")</a></li>
                        }
                        @if (Model.AllowCustomersToApplyForVendorAccount && Model.DisplayApplyVendorAccountFooterItem)
                        {
                            <li><a href="@Url.RouteUrl("ApplyVendorAccount")">@T("Vendors.ApplyAccount")</a></li>
                        }
                        @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn3).ToList())
                        {
                            <li><a href="@Url.RouteUrl("Topic", new {SeName = topic.SeName})">@topic.Name</a></li>
                        }
                    </ul>
                </div>
            </div>
            <div class="col-lg-3">
                <div class="footer-block follow-us mb-3">
                    <div class="social">
                        <div class="title" data-toggle="collapse" data-parent="#accordion" href="#collapseFour">
                            <strong>@T("Footer.FollowUs")</strong>
                        </div>
                        @await Component.InvokeAsync(typeof(SocialButtonsViewComponent))
                    </div>
                    @{
                        var showLogoAtPageFooter = await settingService.GetSettingByKeyAsync<bool>("BerrySettings.ShowLogoAtPageFooter", storeId: storeContext.GetCurrentStoreAsync().Id, loadSharedValueIfNotFound: true);
                        if (showLogoAtPageFooter)
                        {
                            var pictureId = await settingService.GetSettingByKeyAsync<int>("BerrySettings.FooterLogoPictureId", storeId: storeContext.GetCurrentStoreAsync().Id, loadSharedValueIfNotFound: true);
                            var pictureUrl = await pictureService.GetPictureUrlAsync(pictureId);
                            <div class="footer-logo-box"> <img src="@pictureUrl" /> </div>
                        }
                    }
                </div>
                @await Component.InvokeAsync(typeof(StoreThemeSelectorViewComponent))
            </div>
        </div>
    </div>
    <div class="footer-lower">

        @{
            if (showSupportedCardsFooter == true)
            {
                <div class="container">
                    <div class="col-12 text-center mb-4">
                        <a class="payment-cart-logo"> <img class="img-fluid" src="@supportedcardurl" /> </a>
                    </div>
                </div>
            }
        }


        <div class="custom-container-fluid">
            <div class="row">
                <div class="col-md-4">
                    <div class="footer-info">
                        <span class="footer-disclaimer">@T("Content.CopyrightNotice", DateTime.Now.Year, Model.StoreName)</span>
                        @if (Model.DisplayTaxShippingInfoFooter)
                        {
                            var inclTax = await workContext.GetTaxDisplayTypeAsync() == TaxDisplayType.IncludingTax;
                            <span class="footer-tax-shipping">
                                @T(inclTax ? "Footer.TaxShipping.InclTax" : "Footer.TaxShipping.ExclTax", Url.RouteTopicUrl("shippinginfo"))
                            </span>
                        }
                    </div>
                </div>


                <div class="col-md-4">
                    @if (!Model.HidePoweredByNopCommerce)
                    {
                        <div class="footer-powered-by">
                            @*Would you like to remove the "Powered by nopCommerce" link in the bottom of the footer?
                                Please find more info at https://www.nopcommerce.com/copyrightremoval.aspx*@
                            <span class="poweredby">Powered by</span>
                            <a class="link" href="https://www.nopcommerce.com/">nopCommerce</a>
                        </div>
                    }
                    @if (!hideDesignedByNopStation)
                    {
                        <div class="footer-powered-by">
                            Designed By <img class="nopstation-logo" alt="Designed by nopStation" title="Designed by nopStation" src="/Themes/Berry/Content/images/designed-by-nopstation.png" width="98" height="22">
                        </div>
                    }
                </div>
                <div class="col-md-4">
                    <div class="footer-email">@footerEmail</div>
                </div>
            </div>
        </div>
    </div>
    @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.Footer })
</div>
<script asp-location="Footer">
    //import { Script } from "vm";

    $(document).ready(function () {
        $('.footer-block .title').on('click', function () {
            var e = window, a = 'inner';
            if (!('innerWidth' in window)) {
                a = 'client';
                e = document.documentElement || document.body;
            }
            var result = { width: e[a + 'Width'], height: e[a + 'Height'] };
            if (result.width < 769) {
                $(this).siblings('.list').slideToggle('slow');
            }
        });
    });

    /* END EXTERNAL SOURCE */
    /* BEGIN EXTERNAL SOURCE */

    $(document).ready(function () {
        $('.block .title').on('click', function () {
            var e = window, a = 'inner';
            if (!('innerWidth' in window)) {
                a = 'client';
                e = document.documentElement || document.body;
            }
            var result = { width: e[a + 'Width'], height: e[a + 'Height'] };
            if (result.width < 1001) {
                $(this).siblings('.listbox').slideToggle('slow');
            }
        });
    });
</script>