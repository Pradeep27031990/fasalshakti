@model ProductEmailAFriendModel
@using Nop.Core.Domain.Seo
@using Nop.Core.Domain.Common
@using Nop.Core
@using Nop.Services.Configuration
@using Nop.Services.Media
@inject ISettingService settingService
@inject IPictureService pictureService
@inject IStoreContext storeContext
@inject Nop.Core.IWebHelper webHelper
@inject SeoSettings seoSettings
@inject CommonSettings commonSettings
@{
    Layout = "_ColumnsOne";

    //title
    NopHtml.AddTitleParts(Model.ProductName);
    //page class
    NopHtml.AddTitleParts(T("PageTitle.ProductEmailAFriend").Text);
    NopHtml.AppendPageCssClassParts("html-email-a-friend-page");
}
@{
    var store = await storeContext.GetCurrentStoreAsync();
    var breadcrumbBackgroundPictureId = await settingService.GetSettingByKeyAsync<int>("berrysettings.breadcrumbbackgroundpictureid", storeId: store.Id, loadSharedValueIfNotFound: true);
    var breadcrumbBackgroundPictureUrl = await pictureService.GetPictureUrlAsync(breadcrumbBackgroundPictureId);
}
@section Breadcrumb {
    <div class="breadcrumb" style="background-image: url('@breadcrumbBackgroundPictureUrl');">
        <div class="page-title">
            <h1>@T("Products.EmailAFriend.Title")</h1>
        </div>
    </div>
}
<div class="custom-container-fluid">
    <div class="page email-a-friend-page">
        <div class="page-body">
            <div class="title">
                <h2><a href="@Url.RouteUrl("Product", new { SeName = Model.ProductSeName })" class="product">@Model.ProductName</a></h2>
            </div>
            @if (Model.SuccessfullySent)
            {
                <div class="result">
                    @Model.Result
                </div>
            }
            else
            {
                <form asp-route="ProductEmailAFriend" method="post">
                    <div asp-validation-summary="ModelOnly" class="message-error"></div>
                    <div class="fieldset">
                        <div class="form-fields">
                            <div class="inputs">
                                <label asp-for="FriendEmail" asp-postfix=":"></label>
                                <input asp-for="FriendEmail" class="friend-email form-control" placeholder="@T("Products.EmailAFriend.FriendEmail.Hint")" />
                                <nop-required />
                                <span asp-validation-for="FriendEmail"></span>
                            </div>
                            <div class="inputs">
                                <label asp-for="YourEmailAddress" asp-postfix=":"></label>
                                <input asp-for="YourEmailAddress" class="your-email form-control" placeholder="@T("Products.EmailAFriend.YourEmailAddress.Hint")" />
                                <nop-required />
                                <span asp-validation-for="YourEmailAddress"></span>
                            </div>
                            <div class="inputs">
                                <label asp-for="PersonalMessage" asp-postfix=":"></label>
                                <textarea asp-for="PersonalMessage" class="your-email form-control" placeholder="@T("Products.EmailAFriend.PersonalMessage.Hint")"></textarea>
                                <nop-required />
                                <span asp-validation-for="PersonalMessage"></span>
                            </div>
                            @if (Model.DisplayCaptcha)
                            {
                                <div class="captcha-box">
                                    <nop-captcha />
                                </div>
                            }
                        </div>
                    </div>
                    <div class="buttons text-left">
                        <input type="submit" name="send-email" class="button-2 send-email-a-friend-button" value="@T("Products.EmailAFriend.Button")" />
                    </div>
                </form>
            }
        </div>
    </div>
</div>

