@model PopularProductTagsModel
@using Nop.Core.Domain.Seo
@using Nop.Core
@using Nop.Services.Configuration
@using Nop.Services.Media
@inject ISettingService settingService
@inject IPictureService pictureService
@inject IStoreContext storeContext
@inject Nop.Core.IWebHelper webHelper
@inject SeoSettings seoSettings
@{
    Layout = "_ColumnsTwo";

    //title
    NopHtml.AddTitleParts(T("PageTitle.AllProductTags").Text);
    //page class
    NopHtml.AppendPageCssClassParts("html-product-tags-all-page");
}

@{
    var store = await storeContext.GetCurrentStoreAsync();
    var breadcrumbBackgroundPictureId = await settingService.GetSettingByKeyAsync<int>("berrysettings.breadcrumbbackgroundpictureid", storeId:store.Id, loadSharedValueIfNotFound: true);
    var breadcrumbBackgroundPictureUrl = await pictureService.GetPictureUrlAsync(breadcrumbBackgroundPictureId);
}

@section Breadcrumb {
    <div class="breadcrumb" style="background-image: url('@breadcrumbBackgroundPictureUrl');">
        <div class="page-title">
            <h1>@T("Products.Tags.All")</h1>
        </div>
    </div>
}
<div class="page product-tags-all-page">
    <div class="page-body">
        @if (Model.Tags.Count > 0)
        {
            <ul class="product-tags-list">
                @foreach (var item in Model.Tags)
                {
                    <li>
                        <a href="@Url.RouteUrl("ProductsByTag", new { item.SeName })" class="producttag" style="font-size:@(Model.GetFontSize(item))%;">
                            @item.Name
                        </a>
                    </li>
                }
            </ul>
        }
    </div>
</div>
