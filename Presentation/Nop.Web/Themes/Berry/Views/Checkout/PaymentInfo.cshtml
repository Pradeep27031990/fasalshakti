@model CheckoutPaymentInfoModel
@using Nop.Core.Domain.Seo
@using Nop.Core.Domain.Common
@using Nop.Core
@using Nop.Services.Configuration
@using Nop.Services.Media
@inject ISettingService settingService
@inject IPictureService pictureService
@inject IStoreContext storeContext
@inject Nop.Core.IWebHelper webHelper
@inject SeoSettings seoSettings
@inject CommonSettings commonSettings
@{
    Layout = "_ColumnsOne";

    //title
    NopHtml.AddTitleParts(T("PageTitle.Checkout").Text);
    //page class
    NopHtml.AppendPageCssClassParts("html-checkout-page");
    NopHtml.AppendPageCssClassParts("html-payment-info-page");
}


@{
    var store = await storeContext.GetCurrentStoreAsync();
    var breadcrumbBackgroundPictureId =await settingService.GetSettingByKeyAsync<int>("berrysettings.breadcrumbbackgroundpictureid", storeId: store.Id, loadSharedValueIfNotFound: true);
    var breadcrumbBackgroundPictureUrl = await pictureService.GetPictureUrlAsync(breadcrumbBackgroundPictureId);
}

@section Breadcrumb {
    <div class="breadcrumb" style="background-image: url('@breadcrumbBackgroundPictureUrl');">
        <div class="page-title">
            <h1>@T("Checkout.PaymentInfo")</h1>
        </div>
    </div>
}
<div class="page custom-container-fluid checkout-page payment-info-page">
    @await Component.InvokeAsync(typeof(CheckoutProgressViewComponent), new { step = CheckoutProgressStep.Payment })
    <div class="page-body checkout-data">
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.CheckoutPaymentInfoTop })
        <div class="section payment-info">
            <form asp-route="CheckoutPaymentInfo" class="opc" method="post">
                <div asp-validation-summary="ModelOnly" class="message-error"></div>
                <div class="info">
                    @await Component.InvokeAsync(Model.PaymentViewComponent)
                </div>
                <div class="buttons text-left mt-3">
                    <input type="submit" name="nextstep" value="@T("Checkout.NextButton")" class="button-2 payment-info-next-step-button" />
                </div>
            </form>
        </div>
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.CheckoutPaymentInfoBottom })
        <div class="section order-summary mt-5">
            <div class="title">
                <strong>@T("Checkout.OrderSummary")</strong>
            </div>
            @await Component.InvokeAsync(typeof(OrderSummaryViewComponent), "ShoppingCart")
        </div>
    </div>
</div>
