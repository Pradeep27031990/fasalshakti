@using Microsoft.AspNetCore.Mvc.Rendering
@using Microsoft.AspNetCore.Routing
@using Nop.Core.Infrastructure
@model ProductTabItemModel

@{
    var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;
}

<div class="card-body">
    @if (Model.Id > 0)
    {
        <div class="sub-card">
            @await Html.PartialAsync("Table", new DataTablesModel
            {
                Name = "producttab-products-grid",
                UrlRead = new DataUrl("ItemProductList", "ProductTab", new RouteValueDictionary { ["ProductTabItemId"] = Model.Id }),
                UrlDelete = new DataUrl("ItemProductDelete", "ProductTab", null),
                UrlUpdate = new DataUrl("ItemProductUpdate", "ProductTab", null),
                Length = defaultGridPageSize,
                LengthMenu = gridPageSizes,
                ColumnCollection = new List<ColumnProperty>
                {
                    new ColumnProperty(nameof(ProductTabItemProductModel.ProductName))
                    {
                        Title = T("Admin.NopStation.ProductTabs.ProductTabItemProducts.Fields.Product").Text,
                        Width = "300",
                        Render = new RenderCustom("renderProductUrl")
                    },
                    new ColumnProperty(nameof(ProductTabItemProductModel.DisplayOrder))
                    {
                        Title = T("Admin.NopStation.ProductTabs.ProductTabItemProducts.Fields.DisplayOrder").Text,
                        Width = "150",
                        ClassName = NopColumnClassDefaults.CenterAll,
                        Editable = true,
                        EditType = EditType.Number
                    },
                    new ColumnProperty(nameof(ProductTabItemProductModel.Id))
                    {
                        Title = T("Admin.Common.Edit").Text,
                        Width = "200",
                        ClassName = NopColumnClassDefaults.Button,
                        Render = new RenderButtonsInlineEdit()
                    },
                    new ColumnProperty(nameof(ProductTabItemProductModel.Id))
                    {
                        Title = T("Admin.Common.Delete").Text,
                        Width = "100",
                        Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
                        ClassName = NopColumnClassDefaults.Button
                    }
                }
            })

            <script>
                function renderProductUrl(data, type, row, meta) {
                    return '<a href="/Admin/Product/Edit/' + row.ProductId + '">' + row.ProductName + '</a>';
                }
            </script>

        </div>
        <div class="form-group row">
            <div class="col-md-12">
                <button type="submit" id="btnAddNewProduct" onclick="javascript:OpenWindow('@(Url.Action("ProductAddPopup", "ProductTab", new { ProductTabItemId = Model.Id, btnId = "btnRefreshProductTabItemProducts", formId = "producttabitem-form" }))', 800, 800, true); return false;" class="btn btn-primary">
                    @T("Admin.NopStation.ProductTabs.ProductTabItems.ProductTabItemProducts.BtnAddNew")
                </button>
            </div>
        </div>
        
        <input type="submit" id="btnRefreshProductTabItemProducts" style="display: none" />
        <script>
            $(document).ready(function () {
                $('#btnRefreshProductTabItemProducts').click(function () {
                    //refresh grid
                    updateTable('#producttab-products-grid');
                    //return false to don't reload a page
                    return false;
                });
            });
        </script>
    }
    else
    {
        <div class="card card-default">
            <div class="card-body">
                @T("Admin.NopStation.ProductTabs.ProductTabItems.ProductTabItemProducts.SaveBeforeEdit")
            </div>
        </div>
    }
</div>