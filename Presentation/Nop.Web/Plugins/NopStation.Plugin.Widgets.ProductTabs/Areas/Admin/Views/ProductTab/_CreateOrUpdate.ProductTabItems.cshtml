@using Microsoft.AspNetCore.Mvc.Rendering
@using Microsoft.AspNetCore.Routing
@using Nop.Core.Infrastructure
@model ProductTabModel

@{
    var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;
}

<div class="card-body">
    @if (Model.Id > 0)
    {
        <div class="sub-card">
            @await Html.PartialAsync("Table", new DataTablesModel
            {
                Name = "producttab-grid",
                UrlRead = new DataUrl("ItemList", "ProductTab", new RouteValueDictionary { ["ProductTabId"] = Model.Id }),
                UrlDelete = new DataUrl("ItemDelete", "ProductTab", null),
                Length = defaultGridPageSize,
                LengthMenu = gridPageSizes,
                ColumnCollection = new List<ColumnProperty>
                {
                    new ColumnProperty(nameof(ProductTabItemModel.Name))
                    {
                        Title = T("Admin.NopStation.ProductTabs.ProductTabItems.Fields.Name").Text,
                        Width = "250"
                    },
                    new ColumnProperty(nameof(ProductTabItemModel.DisplayOrder))
                    {
                        Title = T("Admin.NopStation.ProductTabs.ProductTabItems.Fields.DisplayOrder").Text,
                        Width = "150",
                        ClassName = NopColumnClassDefaults.CenterAll
                    },
                    new ColumnProperty(nameof(ProductTabItemModel.Id))
                    {
                        Title = T("Admin.Common.Edit").Text,
                        Width = "100",
                        ClassName = NopColumnClassDefaults.Button,
                        Render = new RenderButtonEdit(new DataUrl("~/Admin/ProductTab/ItemEdit/"))
                    },
                    new ColumnProperty(nameof(ProductTabItemModel.Id))
                    {
                        Title = T("Admin.Common.Delete").Text,
                        Width = "100",
                        Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
                        ClassName = NopColumnClassDefaults.Button
                    }
                }
            })

            <script>
                function renderPicturesColumnProductTabPictureUrl(data, type, row, meta) {
                    return '<a href="' + row.PictureUrl + '" target="_blank"><img alt="' + row.PictureId + '" src="' + row.PictureUrl + '" width="150" /></a>';
                }
            </script>
        </div>

        <div class="form-group row">
            <div class="col-md-12">
                <a class="btn btn-primary" href="/Admin/ProductTab/ItemCreate?productTabId=@Model.Id">
                    @T("Admin.NopStation.ProductTabs.ProductTabs.ProductTabItems.BtnAddNew")
                </a>
            </div>
        </div>
    }
    else
    {
        <div class="card card-default">
            <div class="card-body">
                @T("Admin.NopStation.ProductTabs.ProductTabs.ProductTabItems.SaveBeforeEdit")
            </div>
        </div>
    }
</div>